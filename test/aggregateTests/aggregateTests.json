[
  {
    "query": "select * from `films`",
    "type": "aggregate",
    "output": {
      "collections": [
        "films"
      ],
      "pipeline": [
      ]
    }
  },
  {
    "query": "select * from `films` limit 10",
    "type": "aggregate",
    "output": {
      "collections": [
        "films"
      ],
      "pipeline": [
        {
          "$limit": 10
        }
      ]
    }
  },
  {
    "query": "select * from `films` limit 10 offset 5",
    "type": "aggregate",
    "output": {
      "collections": [
        "films"
      ],
      "pipeline": [
        {
          "$limit": 10
        },
        {
          "$skip": 5
        }
      ]
    }
  },
  {
    "query": "select Title,Rating from `films`",
    "type": "aggregate",
    "output": {
      "collections": [
        "films"
      ],
      "pipeline": [
        {
          "$project": {
            "Title": "$Title",
            "Rating": "$Rating"
          }
        }
      ]
    }
  },
  {
    "query": "select abs(`Replacement Cost`) as aggr from `films`",
    "type": "aggregate",
    "output": {
      "collections": [
        "films"
      ],
      "pipeline": [
        {
          "$project": {
            "aggr": {
              "$abs": "$Replacement Cost"
            }
          }
        }
      ]
    }
  },
  {
    "query": "select id,Title,Rating from `films` where abs(id)=1",
    "type": "aggregate",
    "output": {
      "collections": [
        "films"
      ],
      "pipeline": [
        {
          "$match": {
            "$expr": {
              "$eq": [
                {
                  "$abs": "$id"
                },
                1
              ]
            }
          }
        },
        {
          "$project": {
            "id": "$id",
            "Title": "$Title",
            "Rating": "$Rating"
          }
        }
      ]
    }
  },
  {
    "query": "select id,Title,Rating from `films` where abs(id)=1 or abs(id)=2",
    "type": "aggregate",
    "output": {
      "collections": [
        "films"
      ],
      "pipeline": [
        {
          "$match": {
            "$or": [
              {
                "$expr": {
                  "$eq": [
                    {
                      "$abs": "$id"
                    },
                    1
                  ]
                }
              },
              {
                "$expr": {
                  "$eq": [
                    {
                      "$abs": "$id"
                    },
                    2
                  ]
                }
              }
            ]
          }
        },
        {
          "$project": {
            "id": "$id",
            "Title": "$Title",
            "Rating": "$Rating"
          }
        }
      ]
    }
  },
  {
    "query": "select id,Title,Rating from `films` where sum_Array((select id as total from customers),'total') =1",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$match": {
            "$expr": {
              "$eq": [
                {
                  "$reduce": {
                    "input": {
                      "$map": {
                        "input": "$customers",
                        "in": {
                          "total": "$$this.id"
                        }
                      }
                    },
                    "initialValue": 0,
                    "in": {
                      "$sum": [
                        "$$value",
                        "$$this.total"
                      ]
                    }
                  }
                },
                1
              ]
            }
          }
        },
        {
          "$project": {
            "id": "$id",
            "Title": "$Title",
            "Rating": "$Rating"
          }
        }
      ],
      "collections": [
        "films"
      ]
    }
  },
  {
    "query": "select `Replacement Cost` + 10 as aggr from `films`",
    "type": "aggregate",
    "output": {
      "collections": [
        "films"
      ],
      "pipeline": [
        {
          "$project": {
            "aggr": {
              "$add": [
                "$Replacement Cost",
                10
              ]
            }
          }
        }
      ]
    }
  },
  {
    "query": "select CEIL(`Replacement Cost`) as aggr from `films`",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$project": {
            "aggr": {
              "$ceil": "$Replacement Cost"
            }
          }
        }
      ],
      "collections": [
        "films"
      ]
    }
  },
  {
    "query": "select `Replacement Cost` / 10 / 2 as aggr from `films`",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$project": {
            "aggr": {
              "$divide": [
                {
                  "$divide": [
                    "$Replacement Cost",
                    10
                  ]
                },
                2
              ]
            }
          }
        }
      ],
      "collections": [
        "films"
      ]
    }
  },
  {
    "query": "select `Address.City` as City,avg(SIZE_OF_ARRAY(`Rentals`)) as AvgRentals from `customers` where `First Name` like 'm%' group by `Address.City`",
    "type": "aggregate",
    "output": {
      "collections": [
        "customers"
      ],
      "pipeline": [
        {
          "$match": {
            "First Name": {
              "$regex": "^m",
              "$options": "i"
            }
          }
        },
        {
          "$group": {
            "_id": {
              "City": "$Address.City"
            },
            "AvgRentals": {
              "$avg": {
                "$size": "$Rentals"
              }
            }
          }
        },
        {
          "$project": {
            "City": "$_id.City",
            "AvgRentals": "$AvgRentals",
            "_id": 0
          }
        }
      ]
    }
  },
  {
    "query": "select  `Address.Country` as Country,avg(SIZE_OF_ARRAY(`Rentals`)) as AvgRentals from `customers` where `First Name` like 'm%' group by `Country`",
    "type": "aggregate",
    "output": {
      "collections": [
        "customers"
      ],
      "pipeline": [
        {
          "$match": {
            "First Name": {
              "$regex": "^m",
              "$options": "i"
            }
          }
        },
        {
          "$group": {
            "_id": {
              "Country": "$Address.Country"
            },
            "AvgRentals": {
              "$avg": {
                "$size": "$Rentals"
              }
            }
          }
        },
        {
          "$project": {
            "Country": "$_id.Country",
            "AvgRentals": "$AvgRentals",
            "_id": 0
          }
        }
      ]
    }
  },
  {
    "query": "select  `Address.Country` as Country,`Address.City` as City,avg(SIZE_OF_ARRAY(`Rentals`)) as AvgRentals from `customers` where `First Name` like 'm%' group by `Address.Country`,`City`",
    "type": "aggregate",
    "output": {
      "collections": [
        "customers"
      ],
      "pipeline": [
        {
          "$match": {
            "First Name": {
              "$regex": "^m",
              "$options": "i"
            }
          }
        },
        {
          "$group": {
            "_id": {
              "Country": "$Address.Country",
              "City": "$Address.City"
            },
            "AvgRentals": {
              "$avg": {
                "$size": "$Rentals"
              }
            }
          }
        },
        {
          "$project": {
            "Country": "$_id.Country",
            "City": "$_id.City",
            "AvgRentals": "$AvgRentals",
            "_id": 0
          }
        }
      ]
    }
  },
  {
    "query": "select `Address.City` as City,abs(-1) as absId from `customers` where `First Name` like 'm%' and abs(-1) >=1",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$match": {
            "First Name": {
              "$regex": "^m",
              "$options": "i"
            },
            "$expr": {
              "$gte": [
                {
                  "$abs": {
                    "$multiply": [
                      -1,
                      {
                        "$literal": 1
                      }
                    ]
                  }
                },
                1
              ]
            }
          }
        },
        {
          "$project": {
            "City": "$Address.City",
            "absId": {
              "$abs": {
                "$multiply": [
                  -1,
                  {
                    "$literal": 1
                  }
                ]
              }
            }
          }
        }
      ],
      "collections": [
        "customers"
      ]
    }
  },
  {
    "query": "select `Address.City` as City,mod(`id`, 10) as modId,avg(SIZE_OF_ARRAY(`Rentals`)) as AvgRentals from `customers` where `First Name` like 'm%' and mod(`id`, 10)  > 1 group by `Address.City`,modId having AvgRentals > 2 order by `Address.City`,modId",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$match": {
            "First Name": {
              "$regex": "^m",
              "$options": "i"
            },
            "$expr": {
              "$gt": [
                {
                  "$mod": [
                    "$id",
                    {
                      "$literal": 10
                    }
                  ]
                },
                1
              ]
            }
          }
        },
        {
          "$group": {
            "_id": {
              "City": "$Address.City",
              "modId": {
                "$mod": [
                  "$id",
                  {
                    "$literal": 10
                  }
                ]
              }
            },
            "AvgRentals": {
              "$avg": {
                "$size": "$Rentals"
              }
            }
          }
        },
        {
          "$project": {
            "City": "$_id.City",
            "modId": "$_id.modId",
            "_id": 0,
            "AvgRentals": "$AvgRentals"
          }
        },
        {
          "$match": {
            "AvgRentals": {
              "$gt": 2
            }
          }
        },
        {
          "$sort": {
            "City": 1,
            "modId": 1
          }
        }
      ],
      "collections": [
        "customers"
      ]
    }
  },
  {
    "query": "select `Address.City` as City,mod(`id`, 10) as modId,avg(SIZE_OF_ARRAY(`Rentals`)) as AvgRentals from `customers` where `First Name` like 'm%' and mod(`id`, 10)  > 1 group by `Address.City`,modId having AvgRentals > 2 order by `City`,modId",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$match": {
            "First Name": {
              "$regex": "^m",
              "$options": "i"
            },
            "$expr": {
              "$gt": [
                {
                  "$mod": [
                    "$id",
                    {
                      "$literal": 10
                    }
                  ]
                },
                1
              ]
            }
          }
        },
        {
          "$group": {
            "_id": {
              "City": "$Address.City",
              "modId": {
                "$mod": [
                  "$id",
                  {
                    "$literal": 10
                  }
                ]
              }
            },
            "AvgRentals": {
              "$avg": {
                "$size": "$Rentals"
              }
            }
          }
        },
        {
          "$project": {
            "City": "$_id.City",
            "modId": "$_id.modId",
            "_id": 0,
            "AvgRentals": "$AvgRentals"
          }
        },
        {
          "$match": {
            "AvgRentals": {
              "$gt": 2
            }
          }
        },
        {
          "$sort": {
            "City": 1,
            "modId": 1
          }
        }
      ],
      "collections": [
        "customers"
      ]
    }
  },
  {
    "query": "select t as `$$ROOT` from (select id,`First Name`,`Last Name`,SIZE_OF_ARRAY(Rentals,'id')  as numRentals from customers) as t",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$project": {
            "id": "$id",
            "First Name": "$First Name",
            "Last Name": "$Last Name",
            "numRentals": {
              "$size": "$Rentals"
            }
          }
        },
        {
          "$project": {
            "t": "$$ROOT"
          }
        },
        {
          "$replaceRoot": {
            "newRoot": "$t"
          }
        }
      ],
      "collections": [
        "customers"
      ]
    }
  },
  {
    "query": "select id,`First Name`,unwind(Rentals) as Rental  from customers",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$project": {
            "id": "$id",
            "First Name": "$First Name",
            "Rental": "$Rentals"
          }
        },
        {
          "$unwind": "$Rental"
        }
      ],
      "collections": [
        "customers"
      ]
    }
  },
  {
    "query": "select id,`First Name`,unwind((select `Film Title` from Rentals)) as Rental  from customers",
    "type": "aggregate",
    "output": {
      "pipeline": [
        {
          "$project": {
            "id": "$id",
            "First Name": "$First Name",
            "Rental": {
              "$map": {
                "input": "$Rentals",
                "in": {
                  "Film Title": "$$this.Film Title"
                }
              }
            }
          }
        },
        {
          "$unwind": "$Rental"
        }
      ],
      "collections": [
        "customers"
      ]
    }
  },
  {
    "query": "select (select id,`First Name` as Name) as t1, (select id,`Last Name` as LastName) as t2,MERGE_OBJECTS(t1,t2) as `$$ROOT`  from customers",
    "type": "aggregate",
    "output": {
      "pipeline": [{"$project":{"t1":{"$arrayToObject":{"$concatArrays":[{"$objectToArray":{"id":"$id","Name":"$First Name"}}]}},"t2":{"$arrayToObject":{"$concatArrays":[{"$objectToArray":{"id":"$id","LastName":"$Last Name"}}]}}}},{"$replaceRoot":{"newRoot":{"$mergeObjects":["$t1","$t2"]}}}],
      "collections": [
        "customers"
      ]
    }
  },
  {
    "query": "select t.CustomerID,t.Name,t.Rental  from (select id as CustomerID,`First Name` as Name,unwind(Rentals) as Rental from customers) as t",
    "type": "aggregate",
    "output": {
      "pipeline": [{"$project":{"CustomerID":"$id","Name":"$First Name","Rental":"$Rentals"}},{"$unwind":"$Rental"},{"$project":{"t":"$$ROOT"}},{"$project":{"CustomerID":"$t.CustomerID","Name":"$t.Name","Rental":"$t.Rental"}}],

        "collections": [
        "customers"
      ]
    }
  },
  {
    "query": "select MERGE_OBJECTS((select t.CustomerID,t.Name),t.Rental) as `$$ROOT` from (select id as CustomerID,`First Name` as Name,unwind(Rentals) as Rental from customers) as t",
    "type": "aggregate",
    "output": {
      "pipeline":[{"$project":{"CustomerID":"$id","Name":"$First Name","Rental":"$Rentals"}},{"$unwind":"$Rental"},{"$project":{"t":"$$ROOT"}},{"$replaceRoot":{"newRoot":{"$mergeObjects":[{"$arrayToObject":{"$concatArrays":[{"$objectToArray":{"CustomerID":"$t.CustomerID","Name":"$t.Name"}}]}},"$t.Rental"]}}}],


        "collections": [
        "customers"
      ]
    }
  },
  {
    "query": "select c.* from customers  as c",
    "type": "aggregate",
    "output": {
      "pipeline": [{"$project":{"c":"$$ROOT"}},{
        "$project": {
          "c": "$c"
        }
      }],
      "collections": [
        "customers"
      ]
    }
  },
  {
    "query": "select c as `$$ROOT` from customers  as c",
    "type": "aggregate",
    "output": {
      "pipeline": [{"$project":{"c":"$$ROOT"}},{"$replaceRoot":{"newRoot":"$c"}}],
      "collections": [
        "customers"
      ]
    }
  },
  {
    "query": "select c.*,cn.*  from customers c inner join `customer-notes` cn on c.id=cn.id",
    "type": "aggregate",
    "output": {
      "pipeline": [{"$project":{"c":"$$ROOT"}},{"$lookup":{"from":"customer-notes","as":"cn","localField":"c.id","foreignField":"id"}},{"$match":{"$expr":{"$gt":[{"$size":"$cn"},0]}}},{"$project":{"c":"$c","cn":"$cn"}}],
      "collections": [
        "customers",
        "customer-notes"
      ]
    }
  },
  {
    "query": "select MERGE_OBJECTS(c,FIRST_IN_ARRAY(cn)) as `$$ROOT` from customers c inner join `customer-notes` cn on c.id=cn.id",
    "type": "aggregate",
    "output": {
      "pipeline":[{"$project":{"c":"$$ROOT"}},{"$lookup":{"from":"customer-notes","as":"cn","localField":"c.id","foreignField":"id"}},{"$match":{"$expr":{"$gt":[{"$size":"$cn"},0]}}},{"$replaceRoot":{"newRoot":{"$mergeObjects":["$c",{"$first":"$cn"}]}}}],
      "collections": [
        "customers",
        "customer-notes"
      ]
    }
  },
  {
    "query": "select c.*,cn.*,cn2.*  from customers c inner join `customer-notes` cn on c.id=cn.id inner join `customer-notes2` cn2 on cn2.id=c.id",
    "type": "aggregate",
    "output": {
      "pipeline":[{"$project":{"c":"$$ROOT"}},{"$lookup":{"from":"customer-notes","as":"cn","localField":"c.id","foreignField":"id"}},{"$match":{"$expr":{"$gt":[{"$size":"$cn"},0]}}},{"$lookup":{"from":"customer-notes2","as":"cn2","localField":"c.id","foreignField":"id"}},{"$match":{"$expr":{"$gt":[{"$size":"$cn2"},0]}}},{"$project":{"c":"$c","cn":"$cn","cn2":"$cn2"}}]
      ,
      "collections": [
        "customers",
        "customer-notes",
        "customer-notes2"
      ]
    }
  },
  {
    "query": "select c.*,`customer-notes`.*,cn2.*  from customers c inner join `customer-notes` on `customer-notes`.id=c.id left outer join `customer-notes2` cn2 on cn2.id=`customer-notes`.id",
    "type": "aggregate",
    "output": {
      "pipeline":[{"$project":{"c":"$$ROOT"}},{"$lookup":{"from":"customer-notes","as":"customer-notes","localField":"c.id","foreignField":"id"}},{"$match":{"$expr":{"$gt":[{"$size":"$customer-notes"},0]}}},{"$lookup":{"from":"customer-notes2","as":"cn2","localField":"customer-notes.id","foreignField":"id"}},{"$project":{"c":"$c","customer-notes":"$customer-notes","cn2":"$cn2"}}],
      "collections": [
        "customers",
        "customer-notes",
        "customer-notes2"
      ]
    }
  },
  {
    "query": "select c.*,cn.* from customers c inner join `customer-notes` cn on cn.id=c.id and (cn.id>2 or cn.id<5)",
    "type": "aggregate",
    "output": {
      "pipeline":[{"$project":{"c":"$$ROOT"}},{"$lookup":{"from":"customer-notes","as":"cn","let":{"c_id":"$c.id"},"pipeline":[{"$match":{"$expr":{"$and":[{"$eq":["$id","$$c_id"]},{"$or":[{"$gt":["$id",2]},{"$lt":["$id",5]}]}]}}}]}},{"$match":{"$expr":{"$gt":[{"$size":"$cn"},0]}}},{"$project":{"c":"$c","cn":"$cn"}}],

      "collections": [
        "customers",
        "customer-notes"
      ]
    }
  },
  {
    "query": "select c.*,cn.* from customers c inner join (select * from `customer-notes` where id>2) cn on cn.id=c.id",
    "type": "aggregate",
    "output": {
      "pipeline":[{"$project":{"c":"$$ROOT"}},{"$lookup":{"from":"customer-notes","as":"cn","let":{"c_id":"$c.id"},"pipeline":[{"$match":{"id":{"$gt":2}}},{"$match":{"$expr":{"$eq":["$id","$$c_id"]}}}]}},{"$match":{"$expr":{"$gt":[{"$size":"$cn"},0]}}},{"$project":{"c":"$c","cn":"$cn"}}],
      "collections": [
        "customers",
        "customer-notes"
      ]
    }
  },
  {
    "query": "select c.*,`customer-notes`.*,cn2.*  from customers c inner join `customer-notes|first` on `customer-notes`.id=c.id",
    "type": "aggregate",
    "output": {
      "pipeline":[{"$project":{"c":"$$ROOT"}},{"$lookup":{"from":"customer-notes","as":"customer-notes","localField":"c.id","foreignField":"id"}},{"$set":{"customer-notes":{"$first":"$customer-notes"}}},{"$match":{"customer-notes":{"$ne":null}}},{"$project":{"c":"$c","customer-notes":"$customer-notes","cn2":"$cn2"}}]
      ,
      "collections": [
        "customers",
        "customer-notes"
      ]
    }
  },
  {
    "query": "select c.*,cn.* from customers c inner join `customer-notes|first` as cn on `cn`.id=c.id and cn.id<5",
    "type": "aggregate",
    "output": {
      "pipeline":[{"$project":{"c":"$$ROOT"}},{"$lookup":{"from":"customer-notes","as":"cn","let":{"c_id":"$c.id"},"pipeline":[{"$match":{"$expr":{"$and":[{"$eq":["$id","$$c_id"]},{"$lt":["$id",5]}]}}}]}},{"$set":{"cn":{"$first":"$cn"}}},{"$match":{"cn":{"$ne":null}}},{"$project":{"c":"$c","cn":"$cn"}}],
      "collections": [
        "customers",
        "customer-notes"
      ]
    }
  },
  {
    "query": "select c.*,cn.* from customers c inner join `customer-notes|unwind` as cn on `cn`.id=c.id and cn.id<5",
    "type": "aggregate",
    "output": {
      "pipeline":[{"$project":{"c":"$$ROOT"}},{"$lookup":{"from":"customer-notes","as":"cn","let":{"c_id":"$c.id"},"pipeline":[{"$match":{"$expr":{"$and":[{"$eq":["$id","$$c_id"]},{"$lt":["$id",5]}]}}}]}},{"$unwind":"$cn"},{"$match":{"cn":{"$ne":null}}},{"$project":{"c":"$c","cn":"$cn"}}],

        "collections": [
        "customers",
        "customer-notes"
      ]
    }
  },
  {
    "query": "select sum(`id`) as aggrVal,`Address.City` as City  from `customers` group by `Address.City` order by `Address.City`",
    "type": "aggregate",
    "output": {
      "pipeline":[{"$group":{"_id":{"City":"$Address.City"},"aggrVal":{"$sum":"$id"}}},{"$project":{"City":"$_id.City","_id":0,"aggrVal":"$aggrVal"}},{"$sort":{"City":1}}],

        "collections": [
        "customers"
      ]
    }
  },
  {
    "query": "select avg(`id`) as aggrVal,`Address.City` as City  from `customers` group by `Address.City` order by `Address.City`",
    "type": "aggregate",
    "output": {
      "pipeline":[{"$group":{"_id":{"City":"$Address.City"},"aggrVal":{"$avg":"$id"}}},{"$project":{"City":"$_id.City","_id":0,"aggrVal":"$aggrVal"}},{"$sort":{"City":1}}],

      "collections": [
        "customers"
      ]
    }
  },
  {
    "query": "select min(`id`) as aggrVal,`Address.City` as City  from `customers` group by `Address.City` order by `Address.City`",
    "type": "aggregate",
    "output": {
      "pipeline":[{"$group":{"_id":{"City":"$Address.City"},"aggrVal":{"$min":"$id"}}},{"$project":{"City":"$_id.City","_id":0,"aggrVal":"$aggrVal"}},{"$sort":{"City":1}}],

      "collections": [
        "customers"
      ]
    }
  },
  {
    "query": "select max(`id`) as aggrVal,`Address.City` as City  from `customers` group by `Address.City` order by `Address.City`",
    "type": "aggregate",
    "output": {
      "pipeline":[{"$group":{"_id":{"City":"$Address.City"},"aggrVal":{"$max":"$id"}}},{"$project":{"City":"$_id.City","_id":0,"aggrVal":"$aggrVal"}},{"$sort":{"City":1}}],

      "collections": [
        "customers"
      ]
    }
  },
  {
    "query": "select count(*) as countVal,`Address.City` as City  from `customers` group by `Address.City` order by `Address.City`",
    "type": "aggregate",
    "output": {
      "pipeline":[{"$group":{"_id":{"City":"$Address.City"},"countVal":{"$sum":1}}},{"$project":{"City":"$_id.City","_id":0,"countVal":"$countVal"}},{"$sort":{"City":1}}],

      "collections": [
        "customers"
      ]
    }
  },
  {
    "name": "Select sum case with values only",
    "query": "select sum(case when id <50 then 1 when id >= 50 then -1 else 0 end) as sumCase,`Address.City` as City from `customers` group by `Address.City`",
    "type": "aggregate",
    "output": {
      "pipeline":[{"$group":{"_id":{"City":"$Address.City"},"sumCase":{"$sum":{"$switch":{"branches":[{"case":{"$lt":["$id",50]},"then":1},{"case":{"$gte":["$id",50]},"then":{"$multiply":[-1,{"$literal":1}]}}],"default":{"$literal":0}}}}}},{"$project":{"City":"$_id.City","_id":0,"sumCase":"$sumCase"}}]
    ,

      "collections": [
        "customers"
      ]
    }
  },
  {
    "name": "Select sum case with fields and values",
    "query": "select sum(case when `Address.City`='Ueda' then 1 else 0 end) as Ueda,sum(case when `Address.City`='Tete' then 1 else 0 end) as Tete from `customers` group by `xxx`",
    "type": "aggregate",
    "output": {
      "pipeline":[{"$group":{"_id":{},"Ueda":{"$sum":{"$switch":{"branches":[{"case":{"$eq":["$Address.City","Ueda"]},"then":1}],"default":{"$literal":0}}}},"Tete":{"$sum":{"$switch":{"branches":[{"case":{"$eq":["$Address.City","Tete"]},"then":1}],"default":{"$literal":0}}}}}},{"$project":{"_id":0,"Ueda":"$Ueda","Tete":"$Tete"}}],
      "collections": [
        "customers"
      ]
    }
  },
  {
    "name": "Test Sum Case with field",
    "query": "select sum(case when `Address.City`='Ueda' then `id` else 0 end) as Ueda,sum(case when `Address.City`='Tete' then `id` else 0 end) as Tete from `customers` group by `xxx`",
    "type": "aggregate",
    "output": {
      "pipeline":[{"$group":{"_id":{},"Ueda":{"$sum":{"$switch":{"branches":[{"case":{"$eq":["$Address.City","Ueda"]},"then":"$id"}],"default":{"$literal":0}}}},"Tete":{"$sum":{"$switch":{"branches":[{"case":{"$eq":["$Address.City","Tete"]},"then":"$id"}],"default":{"$literal":0}}}}}},{"$project":{"_id":0,"Ueda":"$Ueda","Tete":"$Tete"}}],
      "collections": [
        "customers"
      ]
    }
  }



]
