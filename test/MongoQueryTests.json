[
  {
    "query": "select * from `films`",
    "output": {
      "collection": "films",
      "limit": 100
    }
  },
  {
    "query": "select Title,Description from `films`",
    "output": {
      "collection": "films",
      "limit": 100,
      "projection": {
        "Title" : "$Title",
        "Description":"$Description"
      }
    }
  },
  {
    "query": "select Title as Name,Description from `films`",
    "output": {
      "collection": "films",
      "limit": 100,
      "projection": {
        "Name" : "$Title",
        "Description": "$Description"
      }
    }
  },
  {
    "query": "SELECT * FROM customers WHERE `Address.Country`='Japan' ORDER BY id desc",
    "output": {
      "collection": "customers",
      "limit": 100,
      "query": { "Address.Country": {
        "$eq": "Japan" }},
      "sort": { "id" : -1 }
    }

  },
  {
    "query": "select `Replacement Value` as Value,Description from `films`",
    "output": {
      "collection": "films",
      "limit": 100,
      "projection": {
        "Value" : "$Replacement Value",
        "Description": "$Description"
      }
    }
  },
  {
    "query": "select Title as Name,Description from `films`",
    "output": {
      "collection": "films",
      "limit": 100,
      "projection": {
        "Name" : "$Title",
        "Description":"$Description"
      }
    }
  },
  {
    "query": "select 'Name' as Id,Description from `films`",
    "output": {
      "collection": "films",
      "limit": 100,
      "projection": {
        "Id" : { "$literal": "Name" },
        "Description": "$Description"
      }
    }
  },
  {
    "query": "select cast(abs(`id`) as decimal) as `id` from `customers`",
    "output": {
      "collection": "customers",
      "limit": 100,
      "projection": {
        "id": {
          "$convert": {
            "input": {
              "$abs": "$id"
            },
            "to": "decimal"
          }
        }
      }
    }
  },
  {
    "query": "select id,Title,Rating,abs(id*-1) as absId from `films`",
    "output": {"limit":100,"collection":"films","projection":{"id":"$id","Title":"$Title","Rating":"$Rating","absId":{"$abs":{"$multiply":["$id",-1]}}}}

  },
  {
    "query": "select cast('123' as int) as `id` from `customers`",
    "output": {
      "collection": "customers",
      "limit": 100,
      "projection": {
        "id": {
          "$convert": {
            "input": "123",
            "to": "int"
          }
        }
      }
    }
  },
  {
    "query": "select cast(1+`id` as varchar) as `id` from `customers`",
    "output": {"limit":100,"collection":"customers","projection":{"id":{"$convert":{"input":{"$add":[1,"$id"]},"to":"string"}}}}

  },

  {
    "query": "select sum(`Replacement Cost`,2)  from `films`",
    "error": "Requires as for function:sum"
  },
  {
    "query": "select sum(`Replacement Cost`,2,id) as s from `films`",
    "output": {
      "collection": "films",
      "limit": 100,
      "projection": {
        "s": {
          "$add": [
            "$Replacement Cost",
            {
              "$literal": 2
            },
            "$id"
          ]
        }
      }
    }
  },
  {
    "query": "select sum(`Replacement Cost`,2,id) as s from `films`",
    "output": {
      "collection": "films",
      "limit": 100,
      "projection": {
        "s": {
          "$add": [
            "$Replacement Cost",
            {
              "$literal": 2
            },
            "$id"
          ]
        }
      }
    }
  },
  {
    "query": "select `Address.City` as City ,`First Name` as Name from `customers` where `id`>1 limit 10 offset 5",
    "output": {
      "collection": "customers",
      "limit": 10,
      "skip": 5,
      "projection": {
        "City": "$Address.City",
        "Name": "$First Name"
      },
      "query": {
        "id": { "$gt": 1 }

      }
    }
  },
  {
    "query": "select `First Name` as Name,FIRST_IN_ARRAY(`Rentals`) as Rental from `customers` where `id`>1 limit 10 offset 5",
    "output": {
      "collection": "customers",
      "limit": 10,
      "skip": 5,
      "projection": {
        "Rental": {
          "$first": "$Rentals"
        },
        "Name": "$First Name"
      },
      "query": {
        "id": { "$gt": 1 }

      }
    }
  },
  {
    "query": "select id,Title,Rating,(select * from Rentals where `Film Title` like '%rin%' and staffId=2) as rentalsArr from `customers`",
    "output": {"limit":100,"collection":"customers","projection":{"id":"$id","Title":"$Title","Rating":"$Rating","rentalsArr":{"$map":{"input":{"$filter":{"input":"$Rentals","cond":{"$and":[{"$and":[{"$regexMatch":{"input":"$$this.Film Title","regex":"rin","options":"i"}},{"$eq":["$$this.staffId",2]}]}]}}},"in":"$$this"}}}}
   },


  {
    "query": "select subtract(convert('1','int'),abs(`Replacement Cost`)) as d,Title from `films`",
    "output": {"limit":100,"collection":"films","projection":{"d":{"$subtract":[{"$convert":{"input":{"$literal":"1"},"to":"int"}},{"$abs":"$Replacement Cost"}]},"Title":"$Title"}}

    },
  {
    "query": "SELECT * FROM customers WHERE `First Name` like '%bc%'",
    "output": {
      "limit": 100,
      "collection": "customers",
      "query": { "First Name": { "$regex": "bc", "$options": "i" } }}
  },
  {
    "query": "SELECT * FROM customers WHERE `First Name` like '%bc%' limit 10 offset 2",
    "output": {
      "limit": 10,
      "skip": 2,
      "collection": "customers",
      "query": { "First Name": { "$regex": "bc", "$options": "i" } }}
  },
  {
    "query": "select id,(case when id=3 then '1' when id=2 then '1' else 0 end) as test from `customers`",
    "output": {"limit":100,"collection":"customers","projection":{
      "id": "$id",
      "test": {
        "$switch": {
          "branches": [
            {
              "case": {
                "$eq": [
                  "$id",
                  3
                ]
              },
              "then": "1"
            },
            {
              "case": {
                "$eq": [
                  "$id",
                  2
                ]
              },
              "then": "1"
            }
          ],
          "default": {
            "$literal": 0
          }
        }
      }
    }}
  },
  {
    "query": "SELECT * FROM customers WHERE `First Name` like '%bc%' limit 10 offset 2",
    "output": {
      "limit": 10,
      "skip": 2,
      "collection": "customers",
      "query": { "First Name": { "$regex": "bc", "$options": "i" } }}
  },
  {
    "query": "select id,(case when IS_ARRAY(Rentals) then 'Yes' else 'No' end) as test from `customers`",
    "output": {"limit":100,"collection":"customers","projection":{
      "id": "$id",
      "test": {
        "$switch": {
          "branches": [
            {
              "case": {
                "$isArray": "$Rentals"
              },
              "then": "Yes"
            }
          ],
          "default": {
            "$literal": "No"
          }
        }
      }
    }}

  },
  {
    "query": "select id,IS_ARRAY(Rentals) as isArray from `customers`",
    "output": {"limit":100,"collection":"customers","projection":{
      "id": "$id",
      "isArray": {

            "$isArray": "$Rentals"

      }
    }}

  },
  {
    "query": "SELECT abs(id + lengthOfArray(Rentals) + 1) as testComplex FROM customers WHERE `First Name` like '%bc%'",
    "output": {
      "limit": 100,
      "collection": "customers",
      "query": {
        "First Name": {
          "$regex": "bc",
          "$options": "i"
        }
      },
      "projection": {
        "testComplex": {
          "$abs": {
            "$add": [
              {
                "$add": [
                  "$id",
                  {
                    "$size": "$Rentals"
                  }
                ]
              },
              1
            ]
          }
        }
      }
    }
  },
  {
    "query": "select id,Title,Rating,(select * from Rentals where staffId<10) as rentalsArr from `customers`",
    "output": {
      "limit": 100,
      "collection": "customers",
      "projection": {
        "id": "$id",
        "Title": "$Title",
        "Rating": "$Rating",
        "rentalsArr": {
          "$map": {
            "input": {
              "$filter": {
                "input": "$Rentals",
                "cond": {
                  "$and": [
                    {
                      "$lt": [
                        "$$this.staffId",
                        "10"
                      ]
                    }
                  ]
                }
              }
            },
            "in": "$$this"
          }
        }
      }
    }
  },
  {
    "query": "SELECT ceiling(id + lengthOfArray(Rentals) + 1) as testComplex FROM customers",
    "output": {
      "limit": 100,
      "collection": "customers",
      "projection": {
        "testComplex": {
        "$ceil": {
          "$add": [
            {
              "$add": [
                "$id",
                {
                  "$size": "$Rentals"
                }
              ]
            },
            1
          ]
        }
      }
    }
    }
  },
  {
    "query": "select * from `films` where id<90 and (id>10 or id=5)",
    "output": {
      "limit": 100,
      "collection": "films",
      "query": {
        "id": {
          "$lt": 90
        },
        "$or": [
          {
            "id": {
              "$gt": 10
            }
          },
          {
            "id": {
              "$eq": 5
            }
          }
        ]
      }
      }
    },
  {
    "query": "select sum(id) as d from `customers` group by d",
    "error": "Query cannot cross multiple collections, have an aggregate function or contain functions in where clauses"
  },
  {
    "name": "array:sum_array",
    "query": "select id,`First Name`,`Last Name`,SUM_ARRAY(`Rentals`,`Payments`,'Amount') as totalPayments from customers",
    "output": {
      "limit": 100,
      "collection": "customers",
      "projection": {
        "id":"$id",
        "First Name":"$First Name",
        "Last Name":"$Last Name",
        "totalPayments":{
          "$reduce":{
          "input": "$Rentals",
          "initialValue": 0,
          "in": {
            "$sum": ["$$value",{
              "$reduce":{
                "input": "$$this.Payments",
                "initialValue": 0,
                "in": {
                  "$sum": ["$$value", "$$this.Amount" ]
                }
              }
            }]}
        }
        }
      }
    }
  },
  {
    "name": "array:sum_array",
    "query": "select id,`First Name`,`Last Name`,SUM_ARRAY(`Rentals`,'filmId') as totalIdRentals from customers",
    "output": {
      "limit": 100,
      "collection": "customers",
      "projection": {
        "id":"$id",
        "First Name":"$First Name",
        "Last Name":"$Last Name",
        "totalIdRentals":{
          "$reduce":{
            "input": "$Rentals",
            "initialValue": 0,
            "in": {
              "$sum": ["$$value","$$this.filmId"]}
          }
        }
      }
    }
  },
  {
    "name": "array:sum_array",
    "query": "select SUM_ARRAY((select SUM_ARRAY(`Payments`,'Amount') as total from `Rentals`),'total') as t from customers",
    "output": {
      "limit": 100,
      "collection": "customers",
      "projection": {"t":{"$reduce":{"input":{"$map":{"input":"$Rentals","in":{"total":{"$reduce":{"input":"$$this.Payments","initialValue":
      0,"in":{"$sum":["$$value","$$this.Amount"]}}}}}},"initialValue":0,"in":{"$sum":["$$value","$$this.total"]}}}}

    }
  },
  {
    "name": "array:sum_array",
    "query": "select id,(select `Film Title` as Title,SUM_ARRAY(`Payments`,'Amount') as totalPayment from `Rentals`) as Rentals from customers",
    "output": {
      "limit": 100,
      "collection": "customers",
      "projection": {"id":"$id","Rentals":{"$map":{"input":"$Rentals","in":{"Title":"$$this.Film Title","totalPayment":{"$reduce":{"input":"$$this.Payments","initialValue":0,"in":{"$sum":["$$value","$$this.Amount"]}}}}}}}

    }
  },
  {
    "name": "array:sum_array",
    "query": "select id,FIRST_IN_ARRAY(select `Film Title` as Title,SUM_ARRAY(`Payments`,'Amount') as totalPayment from `Rentals`) as Rental from customers",
    "output": {
      "limit": 100,
      "collection": "customers",
      "projection": {"id":"$id","Rental":{"$first":{"$map":{"input":"$Rentals","in":{"Title":"$$this.Film Title","totalPayment":{"$reduce":{"input":"$$this.Payments","initialValue":0,"in":{"$sum":["$$value","$$this.Amount"]}}}}}}}}



    }
  },
  {
    "name": "array:avg_array",
    "query": "select id,`First Name`,`Last Name`,avg_ARRAY(`Rentals`,'filmId') as avgIdRentals from customers",
    "output": {
      "limit": 100,
      "collection": "customers",
      "projection": {
        "id":"$id",
        "First Name":"$First Name",
        "Last Name":"$Last Name",
        "totalIdRentals":{
          "$reduce":{
            "input": "$Rentals",
            "initialValue": 0,
            "in": {
              "$sum": ["$$value","$$this.filmId"]}
          }
        }
      }
    }
  },
  {
    "name": "array:avg_array",
    "query": "select id,`First Name`,`Last Name`,avg_ARRAY(`Rentals`,'filmId') as avgIdRentals from customers",
    "output": {
      "limit": 100,
      "collection": "customers",
      "projection": {
        "id":"$id",
        "First Name":"$First Name",
        "Last Name":"$Last Name",
        "totalIdRentals":{
          "$reduce":{
            "input": "$Rentals",
            "initialValue": 0,
            "in": {
              "$sum": ["$$value","$$this.filmId"]}
          }
        }
      }
    }
  },
  {
    "name": "array:avg_array",
    "query": "select id,`First Name`,`Last Name`,avg_ARRAY(`Rentals`,'filmId') as avgIdRentals from customers",
    "output": {
      "limit": 100,
      "collection": "customers",
      "projection": {
        "id":"$id",
        "First Name":"$First Name",
        "Last Name":"$Last Name",
        "totalIdRentals":{
          "$reduce":{
            "input": "$Rentals",
            "initialValue": 0,
            "in": {
              "$sum": ["$$value","$$this.filmId"]}
          }
        }
      }
    }
  },
  {
    "name": "Arithmetic:abs",
    "output": {
      "limit": 100,
      "projection": {
        "exprVal": {
          "$abs": "$Replacement Cost"
        }
      },
      "collection": "films"
    },
    "query": "select abs(`Replacement Cost`) as exprVal from `films`"
  },
  {
    "name": "Arithmetic:ceil",
    "output": {
      "limit": 100,
      "projection": {
        "exprVal": {
          "$ceil": "$Replacement Cost"
        }
      },
      "collection": "films"
    },
    "query": "select ceiling(`Replacement Cost`) as exprVal from `films`"
  },
  {
    "name": "Arithmetic:exp",
    "output": {
      "limit": 100,
      "projection": {
        "exprVal": {
          "$exp": "$Replacement Cost"
        }
      },
      "collection": "films"
    },
    "query": "select exp(`Replacement Cost`) as exprVal from `films`"
  },

  {
    "name": "Arithmetic:trunc",
    "output": {
      "limit": 100,
      "projection": {
        "exprVal": {
          "$trunc": [
            "$Replacement Cost",
            {
              "$literal": 1
            }
          ]
        }
      },
      "collection": "films"
    },
    "query": "select trunc(`Replacement Cost`, 1) as exprVal from `films`"
  },
  {
    "name": "Arithmetic:trunc2",
    "output": {
      "limit": 100,
      "projection": {
        "exprVal": {
          "$trunc": [
            "$Replacement Cost"
          ]
        }
      },
      "collection": "films"
    },
    "query": "select trunc(`Replacement Cost`) as exprVal from `films`"
  },
  {
    "name": "Arithmetic:acos",
    "output": {
      "limit": 100,
      "projection": {
        "exprVal": {
          "$acos": "$Replacement Cost"
        }
      },
      "collection": "films"
    },
    "query": "select acos(`Replacement Cost`) as exprVal from `films`"
  },{
  "name": "Arithmetic:acos2",
  "output": {
    "limit": 100,
    "projection": {
      "exprVal": {
        "$acos": {
          "$literal": 0.35
        }
      }
    },
    "collection": "films"
  },
  "query": "select acos(0.35) as exprVal from `films`"
},

  {
    "name": "Arithmetic:acosh",
    "output": {
      "limit": 100,
      "projection": {
        "exprVal": {
          "$acosh": "$Replacement Cost"
        }
      },
      "collection": "films"
    },
    "query": "select acosh(`Replacement Cost`) as exprVal from `films`"
  },
  {
    "name": "Arithmetic:acosh2",
    "output": {
      "limit": 100,
      "projection": {
        "exprVal": {
          "$acosh": {
            "$literal": 0.35
          }
        }
      },
      "collection": "films"
    },
    "query": "select acosh(0.35) as exprVal from `films`"
  }
]


